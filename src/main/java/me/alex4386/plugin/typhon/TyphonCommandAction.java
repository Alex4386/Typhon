package me.alex4386.plugin.typhon;

import org.bukkit.ChatColor;
import org.bukkit.command.CommandSender;

import java.util.ArrayList;
import java.util.List;

public enum TyphonCommandAction {
    CREATE("create", "<name> <?style>", "Create a new volcano"),
    NEAR("near", "", "Get nearby volcanoes"),
    LIST("list", "", "List all available volcanoes generated by typhon"),
    CONSTRUCTIONS("constructions", "", "Show current constructions running by typhon"),
    DEBUG("debug", "", "Some undocumented debug feature for testing functions.");

    String cmdline;
    String usage;
    String explanation;

    TyphonCommandAction(String cmdline, String usage, String explanation) {
        this.cmdline = cmdline;
        this.usage = usage;
        this.explanation = explanation;
    }

    public String getCommand() {
        return cmdline;
    }

    public static TyphonCommandAction getAction(String string) {
        for (TyphonCommandAction action : TyphonCommandAction.values()) {
            if (action.getCommand().equalsIgnoreCase(string)) {
                return action;
            }
        }
        return null;
    }

    public String getManual(String label) {
        return ChatColor.LIGHT_PURPLE+"/"+label+" "+ChatColor.YELLOW+this.cmdline+" "+ChatColor.GRAY+this.usage+ChatColor.RESET+" : "+this.explanation;
    }

    public static List<String> listAll() {
        List<String> all = new ArrayList<>();

        for (TyphonCommandAction action : TyphonCommandAction.values()) {
            all.add(action.getCommand());
        }

        return all;
    }

    public static List<String> listAll(CommandSender sender) {
        List<String> all = new ArrayList<>();

        for (TyphonCommandAction action : TyphonCommandAction.values()) {
            if (TyphonCommand.hasPermission(sender, action.getCommand())) {
                all.add(action.getCommand());
            }
        }

        return all;
    }

    public static String getAllManual(CommandSender sender, String label) {
        String all = "";

        for (TyphonCommandAction action : TyphonCommandAction.values()) {
            if (TyphonCommand.hasPermission(sender, action.getCommand())) {
                all += action.getManual(label)+"\n";
            }
        }

        return all;
    }
}
